{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/static/js/src/import.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","5","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__webpack_exports__","$","_controller__WEBPACK_IMPORTED_MODULE_0__","document","ready","model","columns","activeObject","routeExport","html","exhibition","li","class","artwork","park","artist","org","control","init","view","sendFile","x","this","postFile","attr","done","response","success","iterateErrors","iterateKeys","refreshMap","buildUL","showItem","remove","clone","addClass","appendTo","console","log","dir","sendData","resultCount","iterateResults","showModal","toUpperCase","warning","error","sendExport","val","JSON","stringify","closest","submit","closeModal","forEach","column","append","outerHTML","appendNameList","items","each","index","changeObject","formID","postRoute","formData","FormData","ajax","type","url","processData","contentType","item","controller","addErrors","text","obj_data","reduce","obj","postExport","json_data","csrftoken","ajaxSetup","beforeSend","xhr","settings","test","crossDomain","setRequestHeader","dataType","textStatus","jQxhr","jqXhr","errorThrown","resetImport","selectFile","on","e","preventDefault","change","getVal","removeClass","files","element","hideItem","modal","find","trigger","empty"],"mappings":"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","file":"import.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t5: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([14,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","'use strict';\n\n// import 'jquery';\nimport {controller} from './controller';\n\n\n$(document).ready(function() {\n\n  (function importData() {\n\n    // MODEL\n    let model = {\n\n      // Store list of CSV column heads\n      columns: [],\n\n      // Declare selected form type\n      activeObject: null,\n\n      // Store result array from imported data\n      result: [],\n\n      // Route to post AJAX request to receive CSV download\n      routeExport: '/export',\n\n      key: $('#js-template_keys').html(),\n\n      exhibition: {\n        name: \"exhibition\",\n        li: $('#js-template_exhibition').html(),\n        class: '.js-column_exhibition'\n      },\n\n      artwork: {\n        name: \"artwork\",\n        li: $('#js-template_artwork').html(),\n        class: '.js-column_artwork'\n      },\n\n      park: {\n        name: \"park\",\n        li: $('#js-template_park').html(),\n        class: '.js-column_park'\n      },\n\n      artist: {\n        name: \"artist\",\n        li: $('#js-template_artist').html(),\n        class: '.js-column_artist'\n      },\n\n      org: {\n        name: \"org\",\n        li: $('#js-template_org').html(),\n        class: '.js-column_org'\n      }\n\n    };\n\n\n    // CONTROLLER\n    let control = {\n\n      init: function() {\n\n        view.init()\n\n      },\n\n\n      // Send import file data to server, get response\n      sendFile: function(x) {\n\n        // Call post data function, get response\n        let postPromise = this.postFile($(x), $(x).attr('action'));\n\n        postPromise.done(function(response) {\n          // If form POST doesn't validate with wtforms, add errors to page\n          if (response.success == false) {\n            control.iterateErrors(response);\n          }\n\n          // If POST is successful, add column values to import_data form\n          else if (response.success == true) {\n            // Store response list in model.columns\n            model.columns = response.data;\n\n            // Call function to populate key option values\n            control.iterateKeys(response.data);\n\n            // Clear object/column values in map section\n            view.refreshMap();\n\n            // Build mapping UL\n            control.buildUL();\n\n            // Show Data DIV\n            view.showItem($('#js-import_data'));\n\n            // Delete current #data_file if it exists\n            $('#data_file').remove();\n\n            // Set import_data file input to match import_file input\n            $('#file_file').clone()\n                           .attr('id', 'data_file')\n                           .addClass('d-none')\n                           .appendTo('#js-import_data_ul');\n          }\n\n          else {\n            console.log(\"Don't know what to do!\");\n            console.dir(response);\n          }\n\n        })\n\n      },\n\n\n      // Send import data to server, get response\n      sendData: function(x) {\n\n        // Call post data function, get response\n        let postPromise = this.postFile($(x), $(x).attr('action'));\n\n        postPromise.done(function(response) {\n          // If form POST doesn't validate with wtforms, add errors to page\n          if (response.success == false) {\n            control.iterateErrors(response.data);\n          }\n\n          // If POST is successful, notify user of import results via modal\n          else if (response.success == true) {\n            // Store response list in model.columns\n            model.result = response;\n\n            // Get count of import success/warning/error values\n            const resultCount = control.iterateResults(model.result.data);\n\n            // Add result info to modal\n            view.showModal(\n              `<h3>\n                ${model.activeObject.name.toUpperCase()} IMPORT RESULTS\n              </h3>\n              <ul>\n                <li>Records imported: ${resultCount.success}</li>\n                <li>Records with warnings: ${resultCount.warning}</li>\n                <li>Records with errors: ${resultCount.error}</li>\n              </ul>\n              <h3>EXPORT RESULTS?</h3>`\n            );\n          }\n\n          else {\n            console.log(\"Don't know what to do!\");\n            console.dir(response);\n          }\n\n        })\n\n      },\n\n\n      // Send export data to server, get file to download\n      sendExport: function(x) {\n        // Add import results JSON to export form field\n        $('#export_data').val(JSON.stringify(model.result.data));\n        // Submit form\n        $(x).closest('form').submit();\n        // Close modal if necessary\n        // $('.modal').modal('hide');\n        // Reset page\n        view.closeModal();\n      },\n\n\n      buildUL: function() {\n\n        model.columns.forEach(function(column) {\n          $('#js-data_ul').append(\n            `<li \n              class=\"[ row mb-5 align-items-baseline justify-content-center ]\"\n             >\n              <div class=\"js-key [ col ]\">\n                ${$(model.key)[0].outerHTML}\n              </div>\n              <div class=\"[ px-3 col-12 col-md-1 text-center ]\">\n                <i class=\"fas fa-arrow-right c-blue--l arrow-import\"></i>\n              </div>\n              <div class=\"js-value [ col ]\"></div>\n            </li>`\n          );\n        });\n\n        // Update name attribute to match WTForms FieldList formatting\n        control.appendNameList('.js-column_key');\n\n      },\n\n\n      // Loop through arguments to update name attribute for WTForms Fieldlist\n      appendNameList: function(items) {\n        $(items).each(function(index) {\n          $(this).attr('name', $(this).attr('name') + '-' + (index + 1));\n        });\n      },\n\n\n      // Build key/value list\n      changeObject: function(x) {\n\n        // Set new model.activeObject\n        model.activeObject = model[x];\n\n        console.log(model.activeObject);\n\n        // Set values LI based on selected Object name\n        $('.js-value').each(function() {\n          $(this).html(model.activeObject.li);\n        });\n\n        // Update name attribute to match WTForms FieldList formatting\n        control.appendNameList(model.activeObject.class);\n\n      },\n\n\n      // Post file form\n      postFile: function(formID, postRoute) {\n\n        // console.log(\"Form ID: \" + formID);\n        console.log(\"Post route: \" + postRoute);\n\n        let formData = new FormData($(formID)[0]);\n\n        // Post data\n        return $.ajax({\n          type: 'POST',\n          url: postRoute,\n          processData: false,\n          contentType: false,\n          data: formData,\n        });\n\n      },\n\n\n      // Add each error to HTML page\n      iterateErrors: function(response) {\n\n        // For each received error...\n        for (const item in response.data) {\n          console.log(\"ERROR ITEM: \" + item);\n          // Notify user of alert error with alert DIV\n          controller.addErrors(item + \": \" + response.data[item]);\n        }\n\n      },\n\n\n      // Add received key values to key select option\n      iterateKeys: function(data) {\n        // Loop through response, add as option to model.key\n        for (const item of data) {\n          // Add item as option to key SelectField\n          model.key = $(model.key).append($(\"<option></option>\")\n                                  .attr(\"value\", item)\n                                  .text(item));\n        }\n\n      },\n\n\n      // Sift through passed object argument, return success/error/warning count\n      iterateResults: function(obj_data) {\n        // Count # of successes, warnings, errors\n        return obj_data.reduce((item, obj) => {\n          obj.success == true ? item.success++ : item.error++;\n          obj.warning.length > 0 && item.warning++;\n          return item;\n        }, {success: 0, warning: 0, error: 0});\n      },\n\n\n      // Post JSON data\n      postExport: function(postRoute, json_data) {\n        let csrftoken = $('meta[name=csrf-token]').attr('content')\n\n        $.ajaxSetup({\n            beforeSend: function(xhr, settings) {\n                if (!/^(GET|HEAD|OPTIONS|TRACE)$/i.test(settings.type) && !this.crossDomain) {\n                    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n                }\n            }\n        })\n        return $.ajax({\n          url: postRoute,\n          type: 'POST',\n          contentType: 'application/json; charset=utf-8',\n          dataType: 'json',\n          data: JSON.stringify(json_data),\n          processData: false,\n          success: (data, textStatus, jQxhr) => {\n            console.log(\"jqXhr: \", jqXhr);\n            console.log(\"textStatus: \", textStatus);\n            console.log(\"errorThrown: \", errorThrown);\n          },\n          error: (jqXhr, textStatus, errorThrown ) => {\n            console.log(\"jqXhr: \", jqXhr);\n            console.log(\"textStatus: \", textStatus);\n            console.log(\"errorThrown: \", errorThrown);\n          }\n        });\n\n      },\n\n\n      // Function called when import is complete, resetting page view and values\n      resetImport: function() {\n        // Reset model values\n        model.columns = [];\n        model.activeObject = null;\n        model.result = [];\n        model.key = $('#js-template_keys').html();\n        console.log(model);\n      }\n\n    };\n\n\n    // VIEW\n    let view = {\n\n      init: function() {\n\n        this.sendFile();\n        this.sendData();\n        this.changeObject();\n        this.closeModal();\n        this.sendExport();\n        this.selectFile();\n      },\n\n\n      // Function called when Submit File submit form button clicked\n      sendFile: function() {\n\n        $('#js-post_file').on('click', function(e) {\n          e.preventDefault();\n          control.sendFile($('#js-form_import_file'));\n        });\n\n      },\n\n\n      // Function called when Submit Data submit form button clicked\n      sendData: function() {\n\n        $('#js-post_data').on('click', function(e) {\n          e.preventDefault();\n          control.sendData($('#js-form_import_data'));\n        });\n\n      },\n\n      // Function called when Class_object option is changed\n      changeObject: function() {\n\n        $('#class_object').change(function(e) {\n\n          let obj = view.getVal();\n\n          if (obj) {\n            // Call controller function to show object section based on user input\n            control.changeObject(obj);\n\n            // Show UL\n            // FUTURE: Move to View\n            $('#js-data_ul').removeClass('d-none');\n          }\n\n        });\n\n      },\n\n\n      // Function called to retrieve current Class_object value\n      getVal: function() {\n        return $('#class_object').val();\n      },\n\n\n      selectFile: function() {\n        // Referenced from https://stackoverflow.com/questions/11235206/\n        // twitter-bootstrap-form-file-element-upload-button/25053973#25053973\n        $(document).on('change', '#file_file', function(e) {\n          $('#file_text').html(this.files[0].name);\n        });\n      },\n\n\n      // Function called to display passed element\n      showItem: function(element) {\n        $(element).removeClass(\"d-none\");\n      },\n\n\n      // Function called to hide passed element\n      hideItem: function(element) {\n        $(element).addClass(\"d-none\");\n      },\n\n\n      // Function called to display export modal, add HTML from passed argument\n      showModal: function(html) {\n        // Show modal with results\n        $('#js-modal_results').modal('show')\n                              .find('div.modal-body')\n                              .html(html);\n      },\n\n\n      // Function called when modal is closed\n      closeModal: function() {\n        $('#js-modal_results').modal('hide');\n\n        $('#js-modal_results').on('hidden.bs.modal', function (e) {\n          console.log(\"resetModal!\");\n          // Call function to hide modal, reset import page\n          view.resetImport();\n        });\n\n      },\n\n\n      // Function called when export data button in modal selected\n      sendExport: function() {\n        $('#js-modal-post_export').on('click', function(e) {\n          e.preventDefault();\n          // Call function to submit import results\n          control.sendExport(this);\n        })\n      },\n\n\n      // Function called when import is complete, resetting page view and values\n      resetImport: function() {\n        // $('.modal').modal('hide');\n        // Hide #js-import_data DIV\n        view.hideItem('#js-import_data');\n\n        // Clear #file_file\n        $('#file_file').trigger('reset');\n        // Clear forms\n        $('js-form_import_file').trigger('reset');\n        $('js-form_import_data').trigger('reset');\n        $('js-form_export').trigger('reset');\n        view.refreshMap();\n        // Call control function to reset model values\n        control.resetImport();\n      },\n\n\n      refreshMap: function() {\n        // Clear selected object value\n        $('#class_object').val(\"\");\n\n        // Clear Data UL if attributes exist\n        $('#js-data_ul').empty().addClass('d-none');\n      }\n\n    };\n\n\n    control.init()\n\n  })();\n\n});"],"sourceRoot":""}